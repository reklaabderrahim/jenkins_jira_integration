pipeline {
    agent any
    stages {
        stage('Create Jira Issue') {
            steps {
                script{
//                       def issue = [fields: [ project: [key: 'JKI'],
//                                              summary: 'New JIRA Created from Jenkins.',
//                                              description: 'New JIRA Created from Jenkins.',
//                                              issuetype: [name: 'Task']]]
//                       def newIssue = jiraNewIssue issue: issue, site: 'Jira Site'
//                       echo newIssue.data.key

//                       def transitionInput = [ transition: [ id: 31] ]
//                         jiraTransitionIssue idOrKey: 'JKI-1', input: transitionInput, site: 'Jira Site'

                        def searchResults = jiraJqlSearch jql: "project = jenkinsIntegration AND issuekey = 'JKI-1'", site: 'Jira Site'
                        def issues = searchResults.data.issues
                        println issues.get(0)
                        for (i = 0; i <issues.size(); i++) {
                          def fixVersion = jiraNewVersion version: [name: "new-fix-version-1.0", project: "JKI"], site: 'Jira Site'
                          def testIssue = [fields: [fixVersions: [fixVersion.data]]]
                          response = jiraEditIssue idOrKey: issues[i].key, issue: testIssue, site: 'Jira Site'
                        }
                }
            }
        }
    }
}